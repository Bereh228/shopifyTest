*, ::after, ::before {
  box-sizing: border-box; }

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block; }

body {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff; }

[tabindex="-1"]:focus {
  outline: 0 !important; }

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: .5rem; }

p {
  margin-top: 0;
  margin-bottom: 1rem; }

abbr[data-original-title], abbr[title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none; }

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit; }

dl, ol, ul {
  margin-top: 0;
  margin-bottom: 1rem; }

ol ol, ol ul, ul ol, ul ul {
  margin-bottom: 0; }

dt {
  font-weight: 700; }

dd {
  margin-bottom: .5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 1rem; }

b, strong {
  font-weight: bolder; }

small {
  font-size: 80%; }

sub, sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

a {
  color: #007bff;
  text-decoration: none;
  background-color: transparent; }

a:hover {
  color: #0056b3;
  text-decoration: underline; }

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none; }

a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover {
  color: inherit;
  text-decoration: none; }

a:not([href]):not([tabindex]):focus {
  outline: 0; }

code, kbd, pre, samp {
  font-family: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
  font-size: 1em; }

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto; }

figure {
  margin: 0 0 1rem; }

img {
  vertical-align: middle;
  border-style: none; }

svg {
  overflow: hidden;
  vertical-align: middle; }

table {
  border-collapse: collapse; }

caption {
  padding-top: .75rem;
  padding-bottom: .75rem;
  color: #6c757d;
  text-align: left;
  caption-side: bottom; }

th {
  text-align: inherit; }

label {
  display: inline-block;
  margin-bottom: .5rem; }

button {
  border-radius: 0; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

button, input, optgroup, select, textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

button, input {
  overflow: visible; }

button, select {
  text-transform: none; }

select {
  word-wrap: normal; }

[type=button], [type=reset], [type=submit], button {
  -webkit-appearance: button; }

[type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
  cursor: pointer; }

[type=button]::-moz-focus-inner, [type=reset]::-moz-focus-inner, [type=submit]::-moz-focus-inner, button::-moz-focus-inner {
  padding: 0;
  border-style: none; }

input[type=checkbox], input[type=radio] {
  box-sizing: border-box;
  padding: 0; }

input[type=date], input[type=datetime-local], input[type=month], input[type=time] {
  -webkit-appearance: listbox; }

textarea {
  overflow: auto;
  resize: vertical; }

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0; }

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal; }

progress {
  vertical-align: baseline; }

[type=number]::-webkit-inner-spin-button, [type=number]::-webkit-outer-spin-button {
  height: auto; }

[type=search] {
  outline-offset: -2px;
  -webkit-appearance: none; }

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button; }

output {
  display: inline-block; }

summary {
  display: list-item;
  cursor: pointer; }

template {
  display: none; }

[hidden] {
  display: none !important; }

body {
  position: relative;
  overflow-x: hidden; }

.container {
  margin: 0 auto;
  width: 1350px; }
  @media screen and (max-width: 375px) {
    .container {
      width: 350px; } }
  @media screen and (max-width: 320px) {
    .container {
      width: 300px; } }

.main-content {
  padding-top: 158px; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  min-height: 124px;
  z-index: 50;
  background: #fff;
  width: 100%; }
  .header__triangle {
    width: 0;
    height: 0;
    border: 7px solid transparent;
    border-top: 0;
    border-bottom: 14px solid #5F5E5E; }
    @media screen and (max-width: 375px) {
      .header__triangle {
        display: none; } }
  .header__wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-bottom: 10px;
    position: relative; }
    .header__wrapper .header__line {
      background: #5F5E5E;
      position: absolute;
      bottom: 0;
      right: -60px;
      width: 150%;
      height: 1px; }
  .header__before {
    min-height: 5px;
    padding: 23px 0 0 0; }
    .header__before-wrapper {
      display: flex;
      align-items: center;
      justify-content: flex-end; }
    .header__before-text {
      text-transform: uppercase;
      font-weight: bold;
      line-height: 1; }
  .header__left {
    display: flex;
    align-items: center; }
  .header__nav {
    position: relative;
    transition: .3s transfrom ease-in; }
    .header__nav .about_menu .arrow-up-about {
      transition: .2s transform ease-in;
      position: absolute;
      right: -18px;
      top: 2px; }
    .header__nav .about_menu .arrow-up-about_rotate {
      transform: rotate(180deg); }
    .header__nav .arrow-up-blog {
      transition: .2s transform ease-in;
      margin-left: 4px; }
      .header__nav .arrow-up-blog_active {
        transform: rotate(180deg); }
    .header__nav .header__triangle {
      display: none;
      position: absolute;
      bottom: -43px;
      right: 185px; }
      .header__nav .header__triangle-about {
        display: none;
        width: 0;
        height: 0;
        border: 7px solid transparent;
        border-top: 0;
        border-bottom: 14px solid #5F5E5E;
        position: absolute;
        bottom: -43px;
        right: 321px; }
        .header__nav .header__triangle-about_active {
          display: block; }
      .header__nav .header__triangle_active {
        display: block; }
    .header__nav-exit {
      display: none; }
      @media screen and (max-width: 375px) {
        .header__nav-exit {
          display: block;
          position: absolute;
          top: 0;
          right: 15px;
          font-size: 30px;
          color: #000;
          cursor: pointer;
          z-index: 7; } }
      .header__nav-exit__mega {
        display: none; }
        @media screen and (max-width: 375px) {
          .header__nav-exit__mega {
            top: -50px;
            right: 38px;
            display: block;
            position: absolute;
            font-size: 30px;
            color: #000;
            cursor: pointer;
            z-index: 7; } }
    @media screen and (max-width: 375px) {
      .header__nav {
        display: flex;
        flex-direction: column;
        position: absolute;
        width: 90%;
        height: 100vh;
        background: #fff;
        top: 0;
        right: 0;
        color: #fff;
        z-index: 6;
        padding: 40px 15px;
        transform: translateX(110%);
        transition: .5s transform ease-in-out; } }
    .header__nav_active {
      transform: translateX(15px); }
    .header__nav a {
      text-decoration: none;
      font-weight: bold;
      font-size: 14px;
      text-transform: uppercase;
      color: #3f3f3f;
      transition: .3s color ease-in;
      margin-right: 30px;
      position: relative; }
      .header__nav a img {
        display: none; }
        @media screen and (max-width: 375px) {
          .header__nav a img {
            display: block;
            position: absolute;
            top: 50%;
            right: 0;
            transform: translateY(-50%);
            width: 20px;
            height: 20px; } }
      @media screen and (max-width: 375px) {
        .header__nav a {
          margin: 0;
          color: #000;
          padding: 5px;
          line-height: 1;
          border: 1px solid #929292;
          font-size: 18px; }
          .header__nav a::after {
            display: block; } }
      .header__nav a:hover {
        color: #000; }
    .header__nav .arrow-up {
      position: absolute;
      top: 6px;
      right: 216px;
      font-size: 14px;
      transition: .2s all; }
      .header__nav .arrow-up_rotate {
        transform: rotate(180deg); }
  .header__logo {
    width: 98px;
    height: 91px;
    margin-right: 23px; }
    .header__logo img {
      display: block;
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover; }
  .header__right-icons i {
    margin-left: 30px;
    font-size: 20px;
    cursor: pointer; }
  .header__mega {
    display: none;
    min-height: 230px;
    position: absolute;
    width: 100%;
    bottom: auto;
    left: 0;
    z-index: 5;
    background-color: #fff; }
    .header__mega_active {
      display: block; }
      @media screen and (max-width: 375px) {
        .header__mega_active {
          z-index: 6;
          right: 0;
          left: auto;
          top: 0;
          width: 90%;
          padding: 15px;
          height: 100vh; } }
    .header__mega-wrapper {
      display: flex;
      align-items: flex-start;
      justify-content: space-between;
      flex-wrap: wrap;
      padding-top: 10px;
      position: relative; }
      @media screen and (max-width: 375px) {
        .header__mega-wrapper {
          flex-direction: column;
          padding-top: 0;
          transform: translateY(40px); } }
    @media screen and (max-width: 375px) {
      .header__mega-item {
        width: 90%;
        padding: 5px;
        border: 1px solid #000; } }
    .header__mega-item__exit {
      display: none; }
      @media screen and (max-width: 375px) {
        .header__mega-item__exit {
          display: block;
          position: absolute;
          top: 0;
          right: 36px;
          font-size: 30px;
          color: #000;
          cursor: pointer;
          z-index: 9; } }
    .header__mega-item__descr {
      display: flex;
      flex-direction: column;
      transition: .5s transform;
      position: relative; }
      @media screen and (max-width: 375px) {
        .header__mega-item__descr {
          position: absolute;
          width: 100%;
          height: 100vh;
          top: -42px;
          right: 0;
          transform: translateX(110%);
          z-index: 8; } }
      .header__mega-item__descr_active {
        background: #fff;
        transform: translateX(0); }
    .header__mega-item__wrapper {
      display: flex;
      flex-direction: column; }
    .header__mega-item-arrow {
      display: none; }
      @media screen and (max-width: 375px) {
        .header__mega-item-arrow {
          display: block;
          position: absolute;
          right: 0;
          top: 0; } }
    .header__mega-item__title {
      font-size: 14px;
      font-weight: bold;
      color: #000;
      margin-bottom: 10px;
      position: relative; }
      @media screen and (max-width: 375px) {
        .header__mega-item__title {
          margin-bottom: 0;
          font-size: 18px;
          text-transform: uppercase; } }
    .header__mega-item__img {
      width: 240px;
      height: 123px;
      overflow: hidden; }
      .header__mega-item__img img {
        display: block;
        width: 100%;
        height: 100%;
        -o-object-fit: contain;
        object-fit: contain; }
    .header__mega-item__links {
      display: flex;
      flex-direction: column; }
      .header__mega-item__links a {
        color: #a3a3a3;
        font-size: 14px;
        text-decoration: none;
        transition: .2s all;
        line-height: 1;
        margin-bottom: 10px; }
        .header__mega-item__links a:hover {
          color: #000; }
  .header .header__hamburger {
    width: 40px;
    min-height: 10px;
    flex-direction: column;
    align-items: flex-end;
    display: none; }
    @media screen and (max-width: 375px) {
      .header .header__hamburger {
        display: flex; } }
    .header .header__hamburger .hamburger__item {
      background: #000;
      border-radius: 10px;
      height: 3px;
      margin-bottom: 3px; }
      .header .header__hamburger .hamburger__item:nth-child(1) {
        width: 100%; }
      .header .header__hamburger .hamburger__item:nth-child(2) {
        width: 80%; }
      .header .header__hamburger .hamburger__item:nth-child(3) {
        width: 60%; }
  .header__about-mega {
    display: none;
    min-height: 150px;
    position: absolute;
    width: 100%;
    bottom: auto;
    left: 0;
    z-index: 5;
    background: #fff;
    padding: 20px 0; }
    .header__about-mega_active {
      display: block; }
    .header__about-mega__wrapper {
      display: flex;
      align-items: flex-start;
      justify-content: space-between; }
    .header__about-mega__left-item {
      margin-right: 20px;
      display: flex;
      flex-direction: column; }
    .header__about-mega__left-wrapper {
      display: flex; }
    .header__about-mega__left-title {
      color: #000;
      font-weight: bold;
      font-size: 14px; }
    .header__about-mega__left-list {
      display: flex;
      flex-direction: column; }
      .header__about-mega__left-list a {
        text-decoration: none;
        color: #a3a3a3;
        transition: .5s all; }
        .header__about-mega__left-list a:hover {
          text-decoration: none; }
    .header__about-mega__right-img {
      width: 287px;
      height: 123px; }
      .header__about-mega__right-img img {
        display: block;
        width: 100%;
        height: 100%;
        -o-object-fit: contain;
        object-fit: contain; }
  .header .about-img {
    display: block; }
  .header__article {
    display: none;
    position: absolute;
    width: 100%;
    z-index: 5;
    bottom: auto;
    left: 0;
    background: #fff;
    padding: 10px 0; }
    .header__article_active {
      display: block; }
    .header__article-wrapper {
      display: flex;
      justify-content: space-between;
      align-items: flex-start; }
    .header__article-item {
      width: 250px; }
      .header__article-item__wrapper {
        display: flex;
        flex-direction: column; }
      .header__article-item__img {
        width: 240px;
        height: 123px;
        overflow: hidden; }
        .header__article-item__img img {
          display: block;
          width: 100%;
          height: 100%;
          -o-object-fit: contain;
          object-fit: contain; }
      .header__article-item__title a {
        text-decoration: none;
        color: #000;
        transition: .3s all;
        text-transform: uppercase;
        font-weight: bold; }
        .header__article-item__title a:hover {
          color: #000; }
      .header__article-item__tags {
        display: flex;
        margin-bottom: 10px; }
        .header__article-item__tags div {
          margin-right: 5px;
          color: #a3a3a3;
          text-transform: lowercase; }

.goods__wrapper {
  display: grid;
  grid-template: minmax(500px, 1fr)/1fr 1fr; }
  @media screen and (max-width: 375px) {
    .goods__wrapper {
      grid-template: 500px 1fr / 1fr; } }

.goods__descr {
  padding-left: 20px; }
  .goods__descr-wrapper {
    display: flex;
    flex-direction: column; }
    .goods__descr-wrapper div {
      line-height: 1; }

.goods__title {
  text-transform: uppercase;
  font-size: 50px;
  font-weight: bold;
  color: #000;
  line-height: 1; }

.goods__title-type {
  margin-bottom: 5px; }

.goods__type span {
  text-transform: lowercase; }

.goods__price-compare {
  display: flex;
  align-items: flex-end;
  margin-bottom: 20px; }
  .goods__price-compare .goods__price {
    font-size: 20px;
    font-weight: bold;
    margin-right: 15px; }
  .goods__price-compare .goods__compare {
    text-decoration: line-through;
    font-size: 14px;
    color: #a3a3a3; }

.goods__descr-item {
  margin-bottom: 10px; }

.goods__weight {
  margin-bottom: 5px; }

.goods__tags {
  display: flex; }

.goods__tag {
  margin-right: 5px;
  text-transform: lowercase;
  color: #a3a3a3; }

.swiper-cont {
  height: 500px;
  width: 600px; }
  @media screen and (max-width: 375px) {
    .swiper-cont {
      width: 350px; } }
  @media screen and (max-width: 320px) {
    .swiper-cont {
      width: 300px; } }
  .swiper-cont .swiper__img {
    width: 100%;
    height: 500px; }
    .swiper-cont .swiper__img img {
      display: block;
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover; }
    .swiper-cont .swiper__img img + img {
      width: 1024px !important;
      height: 1024px !important; }
      @media screen and (max-width: 375px) {
        .swiper-cont .swiper__img img + img {
          width: 680px !important;
          height: 1000px !important; } }
  .swiper-cont .swiper-button-next,
  .swiper-cont .swiper-button-prev {
    color: #000; }
  .swiper-cont .swiper-button-next {
    right: 0; }
  .swiper-cont .swiper-button-prev {
    left: 0; }

.customSquare {
  border: none !important; }

@media screen and (max-width: 375px) {
  .zoomImg {
    width: 800px !important;
    height: 800px !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYm9vdC5taW4uc2NzcyIsImN1c3RvbS5jc3MiLCJjdXN0b20uc2NzcyIsIl9taXhpbnMuc2NzcyIsIl9oZWFkZXIuc2NzcyIsIl92YXJzLnNjc3MiLCJfZ29vZHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFtQixzQkFBcUIsRUFBQTs7QUFBQztFQUFLLHVCQUFzQjtFQUFDLGlCQUFnQjtFQUFDLDhCQUE2QjtFQUFDLHdDQUF1QyxFQUFBOztBQUFDO0VBQXNFLGNBQWEsRUFBQTs7QUFBQztFQUFLLFNBQVE7RUFBQyx1TEFBc0w7RUFBQyxlQUFjO0VBQUMsZ0JBQWU7RUFBQyxnQkFBZTtFQUFDLGNBQWE7RUFBQyxnQkFBZTtFQUFDLHNCQUFxQixFQUFBOztBQ3NCdmhCO0VEdEI4aUIscUJBQW1CLEVBQUE7O0FBQUM7RUFBRyx1QkFBc0I7RUFBQyxTQUFRO0VBQUMsaUJBQWdCLEVBQUE7O0FBQUM7RUFBa0IsYUFBWTtFQUFDLG9CQUFtQixFQUFBOztBQUFDO0VBQUUsYUFBWTtFQUFDLG1CQUFrQixFQUFBOztBQUFDO0VBQXNDLDBCQUF5QjtFQUFDLHlDQUF3QztFQUFDLGlDQUFnQztFQUFDLFlBQVc7RUFBQyxnQkFBZTtFQUFDLHNDQUFxQztFQUFDLDhCQUE2QixFQUFBOztBQUFDO0VBQVEsbUJBQWtCO0VBQUMsa0JBQWlCO0VBQUMsb0JBQW1CLEVBQUE7O0FBQUM7RUFBUyxhQUFZO0VBQUMsbUJBQWtCLEVBQUE7O0FBQUM7RUFBd0IsZ0JBQWUsRUFBQTs7QUFBQztFQUFHLGdCQUFlLEVBQUE7O0FBQUM7RUFBRyxvQkFBbUI7RUFBQyxjQUFhLEVBQUE7O0FBQUM7RUFBVyxnQkFBZSxFQUFBOztBQUFDO0VBQVMsbUJBQWtCLEVBQUE7O0FBQUM7RUFBTSxjQUFhLEVBQUE7O0FBQUM7RUFBUSxrQkFBaUI7RUFBQyxjQUFhO0VBQUMsY0FBYTtFQUFDLHdCQUF1QixFQUFBOztBQUFDO0VBQUksY0FBYSxFQUFBOztBQUFDO0VBQUksVUFB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QTs7QUFHdkI7RUFDSSxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxhQUFhLEVBQUE7O0FBRWpCO0VBQ0ksaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixjRHBFWSxFQUFBOztBQ3lFcEI7RUFDSSxhQUFhO0VBQ2IsWUFBWSxFQUFBO0VIL0NaO0lHNkNKO01BSVEsWUFBWSxFQUFBLEVBa0NuQjtFSG5GRztJRzZDSjtNQU9RLFlBQVksRUFBQSxFQStCbkI7RUF0Q0Q7SUFVUSxXQUFXO0lBQ1gsYUFBYSxFQUFBO0lBWHJCO01BYVksY0FBYztNQUNkLFdBQVc7TUFDWCxZQUFZO01BQ1osb0JBQWlCO01BQWpCLGlCQUFpQixFQUFBO0lBaEI3QjtNQW9CWSx3QkFBdUI7TUFDdkIseUJBQXdCLEVBQUE7TUhsRWhDO1FHNkNKO1VBdUJnQix1QkFBc0I7VUFDdEIseUJBQXdCLEVBQUEsRUFFL0I7RUExQlQ7O0lBOEJRLFdEekdJLEVBQUE7RUMyRVo7SUFpQ1EsUUFBUSxFQUFBO0VBakNoQjtJQW9DUSxPQUFPLEVBQUE7O0FBSWY7RUFDSSx1QkFBc0IsRUFBQTs7QUh0RnRCO0VHeUZKO0lBRVEsdUJBQXNCO0lBQ3RCLHdCQUF1QixFQUFBLEVBRzlCIiwiZmlsZSI6ImN1c3RvbS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqLDo6YWZ0ZXIsOjpiZWZvcmV7Ym94LXNpemluZzpib3JkZXItYm94fWh0bWx7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjtsaW5lLWhlaWdodDoxLjE1Oy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDoxMDAlOy13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudH1hcnRpY2xlLGFzaWRlLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1haW4sbmF2LHNlY3Rpb257ZGlzcGxheTpibG9ja31ib2R5e21hcmdpbjowO2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLFwiTm90byBTYW5zXCIsc2Fucy1zZXJpZixcIkFwcGxlIENvbG9yIEVtb2ppXCIsXCJTZWdvZSBVSSBFbW9qaVwiLFwiU2Vnb2UgVUkgU3ltYm9sXCIsXCJOb3RvIENvbG9yIEVtb2ppXCI7Zm9udC1zaXplOjFyZW07Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojMjEyNTI5O3RleHQtYWxpZ246bGVmdDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9W3RhYmluZGV4PVwiLTFcIl06Zm9jdXN7b3V0bGluZTowIWltcG9ydGFudH1ocntib3gtc2l6aW5nOmNvbnRlbnQtYm94O2hlaWdodDowO292ZXJmbG93OnZpc2libGV9aDEsaDIsaDMsaDQsaDUsaDZ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206LjVyZW19cHttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxcmVtfWFiYnJbZGF0YS1vcmlnaW5hbC10aXRsZV0sYWJiclt0aXRsZV17dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTstd2Via2l0LXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgZG90dGVkO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgZG90dGVkO2N1cnNvcjpoZWxwO2JvcmRlci1ib3R0b206MDstd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwLWluazpub25lO3RleHQtZGVjb3JhdGlvbi1za2lwLWluazpub25lfWFkZHJlc3N7bWFyZ2luLWJvdHRvbToxcmVtO2ZvbnQtc3R5bGU6bm9ybWFsO2xpbmUtaGVpZ2h0OmluaGVyaXR9ZGwsb2wsdWx7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MXJlbX1vbCBvbCxvbCB1bCx1bCBvbCx1bCB1bHttYXJnaW4tYm90dG9tOjB9ZHR7Zm9udC13ZWlnaHQ6NzAwfWRke21hcmdpbi1ib3R0b206LjVyZW07bWFyZ2luLWxlZnQ6MH1ibG9ja3F1b3Rle21hcmdpbjowIDAgMXJlbX1iLHN0cm9uZ3tmb250LXdlaWdodDpib2xkZXJ9c21hbGx7Zm9udC1zaXplOjgwJX1zdWIsc3Vwe3Bvc2l0aW9uOnJlbGF0aXZlO2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdWJ7Ym90dG9tOi0uMjVlbX1zdXB7dG9wOi0uNWVtfWF7Y29sb3I6IzAwN2JmZjt0ZXh0LWRlY29yYXRpb246bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fWE6aG92ZXJ7Y29sb3I6IzAwNTZiMzt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfWE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pe2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9YTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSk6Zm9jdXMsYTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSk6aG92ZXJ7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246bm9uZX1hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKTpmb2N1c3tvdXRsaW5lOjB9Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6U0ZNb25vLVJlZ3VsYXIsTWVubG8sTW9uYWNvLENvbnNvbGFzLFwiTGliZXJhdGlvbiBNb25vXCIsXCJDb3VyaWVyIE5ld1wiLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfXByZXttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxcmVtO292ZXJmbG93OmF1dG99ZmlndXJle21hcmdpbjowIDAgMXJlbX1pbWd7dmVydGljYWwtYWxpZ246bWlkZGxlO2JvcmRlci1zdHlsZTpub25lfXN2Z3tvdmVyZmxvdzpoaWRkZW47dmVydGljYWwtYWxpZ246bWlkZGxlfXRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX1jYXB0aW9ue3BhZGRpbmctdG9wOi43NXJlbTtwYWRkaW5nLWJvdHRvbTouNzVyZW07Y29sb3I6IzZjNzU3ZDt0ZXh0LWFsaWduOmxlZnQ7Y2FwdGlvbi1zaWRlOmJvdHRvbX10aHt0ZXh0LWFsaWduOmluaGVyaXR9bGFiZWx7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWJvdHRvbTouNXJlbX1idXR0b257Ym9yZGVyLXJhZGl1czowfWJ1dHRvbjpmb2N1c3tvdXRsaW5lOjFweCBkb3R0ZWQ7b3V0bGluZTo1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3J9YnV0dG9uLGlucHV0LG9wdGdyb3VwLHNlbGVjdCx0ZXh0YXJlYXttYXJnaW46MDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OmluaGVyaXR9YnV0dG9uLGlucHV0e292ZXJmbG93OnZpc2libGV9YnV0dG9uLHNlbGVjdHt0ZXh0LXRyYW5zZm9ybTpub25lfXNlbGVjdHt3b3JkLXdyYXA6bm9ybWFsfVt0eXBlPWJ1dHRvbl0sW3R5cGU9cmVzZXRdLFt0eXBlPXN1Ym1pdF0sYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b259W3R5cGU9YnV0dG9uXTpub3QoOmRpc2FibGVkKSxbdHlwZT1yZXNldF06bm90KDpkaXNhYmxlZCksW3R5cGU9c3VibWl0XTpub3QoOmRpc2FibGVkKSxidXR0b246bm90KDpkaXNhYmxlZCl7Y3Vyc29yOnBvaW50ZXJ9W3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lcixidXR0b246Oi1tb3otZm9jdXMtaW5uZXJ7cGFkZGluZzowO2JvcmRlci1zdHlsZTpub25lfWlucHV0W3R5cGU9Y2hlY2tib3hdLGlucHV0W3R5cGU9cmFkaW9de2JveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjB9aW5wdXRbdHlwZT1kYXRlXSxpbnB1dFt0eXBlPWRhdGV0aW1lLWxvY2FsXSxpbnB1dFt0eXBlPW1vbnRoXSxpbnB1dFt0eXBlPXRpbWVdey13ZWJraXQtYXBwZWFyYW5jZTpsaXN0Ym94fXRleHRhcmVhe292ZXJmbG93OmF1dG87cmVzaXplOnZlcnRpY2FsfWZpZWxkc2V0e21pbi13aWR0aDowO3BhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MH1sZWdlbmR7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21heC13aWR0aDoxMDAlO3BhZGRpbmc6MDttYXJnaW4tYm90dG9tOi41cmVtO2ZvbnQtc2l6ZToxLjVyZW07bGluZS1oZWlnaHQ6aW5oZXJpdDtjb2xvcjppbmhlcml0O3doaXRlLXNwYWNlOm5vcm1hbH1wcm9ncmVzc3t2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b257aGVpZ2h0OmF1dG99W3R5cGU9c2VhcmNoXXtvdXRsaW5lLW9mZnNldDotMnB4Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lfVt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbntmb250OmluaGVyaXQ7LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbn1vdXRwdXR7ZGlzcGxheTppbmxpbmUtYmxvY2t9c3VtbWFyeXtkaXNwbGF5Omxpc3QtaXRlbTtjdXJzb3I6cG9pbnRlcn10ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lIWltcG9ydGFudH1cbiIsIiosIDo6YWZ0ZXIsIDo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuYXJ0aWNsZSwgYXNpZGUsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFwiU2Vnb2UgVUlcIixSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLEFyaWFsLFwiTm90byBTYW5zXCIsc2Fucy1zZXJpZixcIkFwcGxlIENvbG9yIEVtb2ppXCIsXCJTZWdvZSBVSSBFbW9qaVwiLFwiU2Vnb2UgVUkgU3ltYm9sXCIsXCJOb3RvIENvbG9yIEVtb2ppXCI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgY29sb3I6ICMyMTI1Mjk7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiAwICFpbXBvcnRhbnQ7IH1cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07IH1cblxucCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuYWJicltkYXRhLW9yaWdpbmFsLXRpdGxlXSwgYWJiclt0aXRsZV0ge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgY3Vyc29yOiBoZWxwO1xuICBib3JkZXItYm90dG9tOiAwO1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwLWluazogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBub25lOyB9XG5cbmFkZHJlc3Mge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0OyB9XG5cbmRsLCBvbCwgdWwge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG5cbm9sIG9sLCBvbCB1bCwgdWwgb2wsIHVsIHVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG5kdCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuZGQge1xuICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgbWFyZ2luLWxlZnQ6IDA7IH1cblxuYmxvY2txdW90ZSB7XG4gIG1hcmdpbjogMCAwIDFyZW07IH1cblxuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbnN1Yiwgc3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0uMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0uNWVtOyB9XG5cbmEge1xuICBjb2xvcjogIzAwN2JmZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG5hOmhvdmVyIHtcbiAgY29sb3I6ICMwMDU2YjM7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbmE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKTpmb2N1cywgYTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSk6aG92ZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmZvY3VzIHtcbiAgb3V0bGluZTogMDsgfVxuXG5jb2RlLCBrYmQsIHByZSwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBTRk1vbm8tUmVndWxhcixNZW5sbyxNb25hY28sQ29uc29sYXMsXCJMaWJlcmF0aW9uIE1vbm9cIixcIkNvdXJpZXIgTmV3XCIsbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5wcmUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5maWd1cmUge1xuICBtYXJnaW46IDAgMCAxcmVtOyB9XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG5zdmcge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfVxuXG5jYXB0aW9uIHtcbiAgcGFkZGluZy10b3A6IC43NXJlbTtcbiAgcGFkZGluZy1ib3R0b206IC43NXJlbTtcbiAgY29sb3I6ICM2Yzc1N2Q7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGNhcHRpb24tc2lkZTogYm90dG9tOyB9XG5cbnRoIHtcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDsgfVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07IH1cblxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7IH1cblxuYnV0dG9uLCBpbnB1dCwgb3B0Z3JvdXAsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0OyB9XG5cbmJ1dHRvbiwgaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5idXR0b24sIHNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbnNlbGVjdCB7XG4gIHdvcmQtd3JhcDogbm9ybWFsOyB9XG5cblt0eXBlPWJ1dHRvbl0sIFt0eXBlPXJlc2V0XSwgW3R5cGU9c3VibWl0XSwgYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuW3R5cGU9YnV0dG9uXTpub3QoOmRpc2FibGVkKSwgW3R5cGU9cmVzZXRdOm5vdCg6ZGlzYWJsZWQpLCBbdHlwZT1zdWJtaXRdOm5vdCg6ZGlzYWJsZWQpLCBidXR0b246bm90KDpkaXNhYmxlZCkge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuW3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyLCBidXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuaW5wdXRbdHlwZT1jaGVja2JveF0sIGlucHV0W3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDsgfVxuXG5pbnB1dFt0eXBlPWRhdGVdLCBpbnB1dFt0eXBlPWRhdGV0aW1lLWxvY2FsXSwgaW5wdXRbdHlwZT1tb250aF0sIGlucHV0W3R5cGU9dGltZV0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGxpc3Rib3g7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG5maWVsZHNldCB7XG4gIG1pbi13aWR0aDogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7IH1cblxubGVnZW5kIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cblt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sIFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuW3R5cGU9c2VhcmNoXSB7XG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxub3V0cHV0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuOyB9XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEzNTBweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgd2lkdGg6IDM1MHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiAzMDBweDsgfSB9XG5cbi5tYWluLWNvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogMTU4cHg7IH1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBtaW4taGVpZ2h0OiAxMjRweDtcbiAgei1pbmRleDogNTA7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5oZWFkZXJfX3RyaWFuZ2xlIHtcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyOiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcDogMDtcbiAgICBib3JkZXItYm90dG9tOiAxNHB4IHNvbGlkICM1RjVFNUU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgLmhlYWRlcl9fdHJpYW5nbGUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmhlYWRlcl9fd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuaGVhZGVyX193cmFwcGVyIC5oZWFkZXJfX2xpbmUge1xuICAgICAgYmFja2dyb3VuZDogIzVGNUU1RTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHJpZ2h0OiAtNjBweDtcbiAgICAgIHdpZHRoOiAxNTAlO1xuICAgICAgaGVpZ2h0OiAxcHg7IH1cbiAgLmhlYWRlcl9fYmVmb3JlIHtcbiAgICBtaW4taGVpZ2h0OiA1cHg7XG4gICAgcGFkZGluZzogMjNweCAwIDAgMDsgfVxuICAgIC5oZWFkZXJfX2JlZm9yZS13cmFwcGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIC5oZWFkZXJfX2JlZm9yZS10ZXh0IHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIC5oZWFkZXJfX2xlZnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuaGVhZGVyX19uYXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiAuM3MgdHJhbnNmcm9tIGVhc2UtaW47IH1cbiAgICAuaGVhZGVyX19uYXYgLmFib3V0X21lbnUgLmFycm93LXVwLWFib3V0IHtcbiAgICAgIHRyYW5zaXRpb246IC4ycyB0cmFuc2Zvcm0gZWFzZS1pbjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAtMThweDtcbiAgICAgIHRvcDogMnB4OyB9XG4gICAgLmhlYWRlcl9fbmF2IC5hYm91dF9tZW51IC5hcnJvdy11cC1hYm91dF9yb3RhdGUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuICAgIC5oZWFkZXJfX25hdiAuYXJyb3ctdXAtYmxvZyB7XG4gICAgICB0cmFuc2l0aW9uOiAuMnMgdHJhbnNmb3JtIGVhc2UtaW47XG4gICAgICBtYXJnaW4tbGVmdDogNHB4OyB9XG4gICAgICAuaGVhZGVyX19uYXYgLmFycm93LXVwLWJsb2dfYWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuICAgIC5oZWFkZXJfX25hdiAuaGVhZGVyX190cmlhbmdsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAtNDNweDtcbiAgICAgIHJpZ2h0OiAxODVweDsgfVxuICAgICAgLmhlYWRlcl9fbmF2IC5oZWFkZXJfX3RyaWFuZ2xlLWFib3V0IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgYm9yZGVyOiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci10b3A6IDA7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDE0cHggc29saWQgIzVGNUU1RTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IC00M3B4O1xuICAgICAgICByaWdodDogMzIxcHg7IH1cbiAgICAgICAgLmhlYWRlcl9fbmF2IC5oZWFkZXJfX3RyaWFuZ2xlLWFib3V0X2FjdGl2ZSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5oZWFkZXJfX25hdiAuaGVhZGVyX190cmlhbmdsZV9hY3RpdmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5oZWFkZXJfX25hdi1leGl0IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgICAgIC5oZWFkZXJfX25hdi1leGl0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIHJpZ2h0OiAxNXB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgei1pbmRleDogNzsgfSB9XG4gICAgICAuaGVhZGVyX19uYXYtZXhpdF9fbWVnYSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgICAgICAuaGVhZGVyX19uYXYtZXhpdF9fbWVnYSB7XG4gICAgICAgICAgICB0b3A6IC01MHB4O1xuICAgICAgICAgICAgcmlnaHQ6IDM4cHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgei1pbmRleDogNzsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgIC5oZWFkZXJfX25hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHotaW5kZXg6IDY7XG4gICAgICAgIHBhZGRpbmc6IDQwcHggMTVweDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExMCUpO1xuICAgICAgICB0cmFuc2l0aW9uOiAuNXMgdHJhbnNmb3JtIGVhc2UtaW4tb3V0OyB9IH1cbiAgICAuaGVhZGVyX19uYXZfYWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxNXB4KTsgfVxuICAgIC5oZWFkZXJfX25hdiBhIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjM2YzZjNmO1xuICAgICAgdHJhbnNpdGlvbjogLjNzIGNvbG9yIGVhc2UtaW47XG4gICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5oZWFkZXJfX25hdiBhIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgICAgICAuaGVhZGVyX19uYXYgYSBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7IH0gfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgICAgLmhlYWRlcl9fbmF2IGEge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzkyOTI5MjtcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7IH1cbiAgICAgICAgICAuaGVhZGVyX19uYXYgYTo6YWZ0ZXIge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgICAgLmhlYWRlcl9fbmF2IGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzAwMDsgfVxuICAgIC5oZWFkZXJfX25hdiAuYXJyb3ctdXAge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA2cHg7XG4gICAgICByaWdodDogMjE2cHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICB0cmFuc2l0aW9uOiAuMnMgYWxsOyB9XG4gICAgICAuaGVhZGVyX19uYXYgLmFycm93LXVwX3JvdGF0ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7IH1cbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgd2lkdGg6IDk4cHg7XG4gICAgaGVpZ2h0OiA5MXB4O1xuICAgIG1hcmdpbi1yaWdodDogMjNweDsgfVxuICAgIC5oZWFkZXJfX2xvZ28gaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuICAuaGVhZGVyX19yaWdodC1pY29ucyBpIHtcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5oZWFkZXJfX21lZ2Ege1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgbWluLWhlaWdodDogMjMwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvdHRvbTogYXV0bztcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IDU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAgIC5oZWFkZXJfX21lZ2FfYWN0aXZlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICAuaGVhZGVyX19tZWdhX2FjdGl2ZSB7XG4gICAgICAgICAgei1pbmRleDogNjtcbiAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgaGVpZ2h0OiAxMDB2aDsgfSB9XG4gICAgLmhlYWRlcl9fbWVnYS13cmFwcGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICAuaGVhZGVyX19tZWdhLXdyYXBwZXIge1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpOyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgLmhlYWRlcl9fbWVnYS1pdGVtIHtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwOyB9IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX2V4aXQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgICAgLmhlYWRlcl9fbWVnYS1pdGVtX19leGl0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIHJpZ2h0OiAzNnB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgei1pbmRleDogOTsgfSB9XG4gICAgLmhlYWRlcl9fbWVnYS1pdGVtX19kZXNjciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIHRyYW5zaXRpb246IC41cyB0cmFuc2Zvcm07XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgICAgIC5oZWFkZXJfX21lZ2EtaXRlbV9fZGVzY3Ige1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgIHRvcDogLTQycHg7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExMCUpO1xuICAgICAgICAgIHotaW5kZXg6IDg7IH0gfVxuICAgICAgLmhlYWRlcl9fbWVnYS1pdGVtX19kZXNjcl9hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX3dyYXBwZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW0tYXJyb3cge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcbiAgICAgICAgLmhlYWRlcl9fbWVnYS1pdGVtLWFycm93IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgdG9wOiAwOyB9IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX3RpdGxlIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX2ltZyB7XG4gICAgICB3aWR0aDogMjQwcHg7XG4gICAgICBoZWlnaHQ6IDEyM3B4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgLmhlYWRlcl9fbWVnYS1pdGVtX19pbWcgaW1nIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47IH1cbiAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX2xpbmtzIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgICAuaGVhZGVyX19tZWdhLWl0ZW1fX2xpbmtzIGEge1xuICAgICAgICBjb2xvcjogI2EzYTNhMztcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHRyYW5zaXRpb246IC4ycyBhbGw7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG4gICAgICAgIC5oZWFkZXJfX21lZ2EtaXRlbV9fbGlua3MgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDA7IH1cbiAgLmhlYWRlciAuaGVhZGVyX19oYW1idXJnZXIge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIG1pbi1oZWlnaHQ6IDEwcHg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX2hhbWJ1cmdlciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IH0gfVxuICAgIC5oZWFkZXIgLmhlYWRlcl9faGFtYnVyZ2VyIC5oYW1idXJnZXJfX2l0ZW0ge1xuICAgICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICBoZWlnaHQ6IDNweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDNweDsgfVxuICAgICAgLmhlYWRlciAuaGVhZGVyX19oYW1idXJnZXIgLmhhbWJ1cmdlcl9faXRlbTpudGgtY2hpbGQoMSkge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLmhlYWRlciAuaGVhZGVyX19oYW1idXJnZXIgLmhhbWJ1cmdlcl9faXRlbTpudGgtY2hpbGQoMikge1xuICAgICAgICB3aWR0aDogODAlOyB9XG4gICAgICAuaGVhZGVyIC5oZWFkZXJfX2hhbWJ1cmdlciAuaGFtYnVyZ2VyX19pdGVtOm50aC1jaGlsZCgzKSB7XG4gICAgICAgIHdpZHRoOiA2MCU7IH1cbiAgLmhlYWRlcl9fYWJvdXQtbWVnYSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm90dG9tOiBhdXRvO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogNTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIHBhZGRpbmc6IDIwcHggMDsgfVxuICAgIC5oZWFkZXJfX2Fib3V0LW1lZ2FfYWN0aXZlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmhlYWRlcl9fYWJvdXQtbWVnYV9fd3JhcHBlciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAuaGVhZGVyX19hYm91dC1tZWdhX19sZWZ0LWl0ZW0ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAuaGVhZGVyX19hYm91dC1tZWdhX19sZWZ0LXdyYXBwZXIge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5oZWFkZXJfX2Fib3V0LW1lZ2FfX2xlZnQtdGl0bGUge1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuICAgIC5oZWFkZXJfX2Fib3V0LW1lZ2FfX2xlZnQtbGlzdCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAgICAgLmhlYWRlcl9fYWJvdXQtbWVnYV9fbGVmdC1saXN0IGEge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjYTNhM2EzO1xuICAgICAgICB0cmFuc2l0aW9uOiAuNXMgYWxsOyB9XG4gICAgICAgIC5oZWFkZXJfX2Fib3V0LW1lZ2FfX2xlZnQtbGlzdCBhOmhvdmVyIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuaGVhZGVyX19hYm91dC1tZWdhX19yaWdodC1pbWcge1xuICAgICAgd2lkdGg6IDI4N3B4O1xuICAgICAgaGVpZ2h0OiAxMjNweDsgfVxuICAgICAgLmhlYWRlcl9fYWJvdXQtbWVnYV9fcmlnaHQtaW1nIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBvYmplY3QtZml0OiBjb250YWluOyB9XG4gIC5oZWFkZXIgLmFib3V0LWltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmhlYWRlcl9fYXJ0aWNsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogNTtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIHBhZGRpbmc6IDEwcHggMDsgfVxuICAgIC5oZWFkZXJfX2FydGljbGVfYWN0aXZlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmhlYWRlcl9fYXJ0aWNsZS13cmFwcGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbSB7XG4gICAgICB3aWR0aDogMjUwcHg7IH1cbiAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9fd3JhcHBlciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9faW1nIHtcbiAgICAgICAgd2lkdGg6IDI0MHB4O1xuICAgICAgICBoZWlnaHQ6IDEyM3B4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9faW1nIGltZyB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47IH1cbiAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9fdGl0bGUgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIHRyYW5zaXRpb246IC4zcyBhbGw7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gICAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9fdGl0bGUgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDA7IH1cbiAgICAgIC5oZWFkZXJfX2FydGljbGUtaXRlbV9fdGFncyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgICAgICAgLmhlYWRlcl9fYXJ0aWNsZS1pdGVtX190YWdzIGRpdiB7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgY29sb3I6ICNhM2EzYTM7XG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTsgfVxuXG4uZ29vZHNfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlOiBtaW5tYXgoNTAwcHgsIDFmcikvMWZyIDFmcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgIC5nb29kc19fd3JhcHBlciB7XG4gICAgICBncmlkLXRlbXBsYXRlOiA1MDBweCAxZnIgLyAxZnI7IH0gfVxuXG4uZ29vZHNfX2Rlc2NyIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG4gIC5nb29kc19fZGVzY3Itd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgLmdvb2RzX19kZXNjci13cmFwcGVyIGRpdiB7XG4gICAgICBsaW5lLWhlaWdodDogMTsgfVxuXG4uZ29vZHNfX3RpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICMwMDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG5cbi5nb29kc19fdGl0bGUtdHlwZSB7XG4gIG1hcmdpbi1ib3R0b206IDVweDsgfVxuXG4uZ29vZHNfX3R5cGUgc3BhbiB7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7IH1cblxuLmdvb2RzX19wcmljZS1jb21wYXJlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gIC5nb29kc19fcHJpY2UtY29tcGFyZSAuZ29vZHNfX3ByaWNlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG4gIC5nb29kc19fcHJpY2UtY29tcGFyZSAuZ29vZHNfX2NvbXBhcmUge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogI2EzYTNhMzsgfVxuXG4uZ29vZHNfX2Rlc2NyLWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbi5nb29kc19fd2VpZ2h0IHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG5cbi5nb29kc19fdGFncyB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuLmdvb2RzX190YWcge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbiAgY29sb3I6ICNhM2EzYTM7IH1cblxuLnN3aXBlci1jb250IHtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgd2lkdGg6IDYwMHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgLnN3aXBlci1jb250IHtcbiAgICAgIHdpZHRoOiAzNTBweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gICAgLnN3aXBlci1jb250IHtcbiAgICAgIHdpZHRoOiAzMDBweDsgfSB9XG4gIC5zd2lwZXItY29udCAuc3dpcGVyX19pbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTAwcHg7IH1cbiAgICAuc3dpcGVyLWNvbnQgLnN3aXBlcl9faW1nIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7IH1cbiAgICAuc3dpcGVyLWNvbnQgLnN3aXBlcl9faW1nIGltZyArIGltZyB7XG4gICAgICB3aWR0aDogMTAyNHB4ICFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDEwMjRweCAhaW1wb3J0YW50OyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICAuc3dpcGVyLWNvbnQgLnN3aXBlcl9faW1nIGltZyArIGltZyB7XG4gICAgICAgICAgd2lkdGg6IDY4MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAwcHggIWltcG9ydGFudDsgfSB9XG4gIC5zd2lwZXItY29udCAuc3dpcGVyLWJ1dHRvbi1uZXh0LFxuICAuc3dpcGVyLWNvbnQgLnN3aXBlci1idXR0b24tcHJldiB7XG4gICAgY29sb3I6ICMwMDA7IH1cbiAgLnN3aXBlci1jb250IC5zd2lwZXItYnV0dG9uLW5leHQge1xuICAgIHJpZ2h0OiAwOyB9XG4gIC5zd2lwZXItY29udCAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICBsZWZ0OiAwOyB9XG5cbi5jdXN0b21TcXVhcmUge1xuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAuem9vbUltZyB7XG4gICAgd2lkdGg6IDgwMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiA4MDBweCAhaW1wb3J0YW50OyB9IH1cbiIsIkBpbXBvcnQgJ3JlYm9vdC5taW4nO1xuQGltcG9ydCAnX3ZhcnMnO1xuQGltcG9ydCAnX21peGlucyc7XG5ib2R5e1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XG59XG5cbi5jb250YWluZXJ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDEzNTBweDtcbiAgICBAaW5jbHVkZSBtZWRpYSgzNzVweCl7XG4gICAgICAgIHdpZHRoOiAzNTBweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgbWVkaWEoMzIwcHgpe1xuICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgfVxufVxuLm1haW4tY29udGVudHtcbiAgICBwYWRkaW5nLXRvcDogMTU4cHg7XG59XG5AaW1wb3J0ICdfaGVhZGVyJztcbkBpbXBvcnQgJ19nb29kcyc7XG5cbiIsIkBmdW5jdGlvbiBzdHJpcC11bml0cygkdmFsdWUpIHtcbiAgICBAcmV0dXJuICgkdmFsdWUgLyAoJHZhbHVlICogMCArIDEpKTtcbiAgfVxuICBcbiAgLy8vIFJldHVybnMgdGhlIHZhbHVlIGluIHJlbSBmb3IgYSBnaXZlbiBwaXhlbCB2YWx1ZS5cbiAgLy8vIEBwYXJhbSB7TnVtYmVyfSAkcHh2YWwgLSBUaGUgcGl4ZWwgdmFsdWUgdG8gYmUgY29udmVydGVkLlxuICAvLy8gQHJldHVybiB7TnVtYmVyfSBUaGUgY29udmVydGVkIHZhbHVlIGluIHJlbS5cbiAgXG4gIEBmdW5jdGlvbiByZW0oJHB4dmFsKSB7XG4gICAgQGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcbiAgICAgICRweHZhbDogc3RyaXAtdW5pdHMoJHB4dmFsKTtcbiAgICB9XG4gIFxuICAgIEByZXR1cm4gKCRweHZhbCAvIDE2KSAqIDFyZW07XG4gIH1cbiAgXG4gIC8vLyBHZXQgY29sb3Igd2l0aCBzcGVjaWZpZWQgb3BhY2l0eVxuICAvLy8gQHBhcmFtIHtDb2xvcn0gJGNvbG9yIC0gQmFzZSBjb2xvci5cbiAgLy8vIEBwYXJhbSB7TnVtYmVyfSAkb3BhY2l0eSAtIFRoZSBvcGFjaXR5IHRvIGFwcGx5LlxuICAvLy8gQHJldHVybiB7Q29sb3J9IC0gVGhlIG1vZGlmaWVkIGNvbG9yXG4gIFxuICBAZnVuY3Rpb24gY29sb3IoJGNvbG9yLCAkb3BhY2l0eTogMSkge1xuICAgIEBpZiAkb3BhY2l0eSAhPSAxIHtcbiAgICAgIEByZXR1cm4gdHJhbnNwYXJlbnRpemUoJGNvbG9yLCAxIC0gJG9wYWNpdHkpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQHJldHVybiAkY29sb3I7XG4gICAgfVxuICB9XG4gIFxuICBAbWl4aW4gbWVkaWEoJHNpemUpIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkc2l6ZSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IiwiLmhlYWRlcntcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWluLWhlaWdodDogMTI0cHg7XG4gICAgei1pbmRleDogNTA7XG4gICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAmX190cmlhbmdsZXtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgYm9yZGVyOiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci10b3A6IDA7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDE0cHggc29saWQgJGJvcmRlcl9jb2xvcjtcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmX193cmFwcGVye1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIC5oZWFkZXJfX2xpbmV7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYm9yZGVyX2NvbG9yO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgcmlnaHQ6IC02MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1MCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmX19iZWZvcmV7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDVweDtcbiAgICAgICAgcGFkZGluZzogMjNweCAwIDAgMDtcbiAgICAgICAgJi13cmFwcGVye1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICB9XG4gICAgICAgICYtdGV4dHtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICB9XG4gICAgfVxuICAgICZfX2xlZnR7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgICZfX25hdntcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0cmFuc2l0aW9uOiAuM3MgdHJhbnNmcm9tIGVhc2UtaW47XG4gICAgICAgIC5hYm91dF9tZW51IC5hcnJvdy11cC1hYm91dHtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4ycyB0cmFuc2Zvcm0gZWFzZS1pbjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHJpZ2h0OiAtMThweDtcbiAgICAgICAgICAgIHRvcDogMnB4O1xuICAgICAgICB9XG4gICAgICAgIC5hYm91dF9tZW51IC5hcnJvdy11cC1hYm91dHtcbiAgICAgICAgICAgICZfcm90YXRle1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLmFycm93LXVwLWJsb2d7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuMnMgdHJhbnNmb3JtIGVhc2UtaW47XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgICAgICAgICAgJl9hY3RpdmV7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXG5cbiAgICAgICAgLmhlYWRlcl9fdHJpYW5nbGV7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYm90dG9tOiAtNDNweDtcbiAgICAgICAgICAgIHJpZ2h0OiAxODVweDtcbiAgICAgICAgICAgICYtYWJvdXR7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiA3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogMDtcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxNHB4IHNvbGlkICRib3JkZXJfY29sb3I7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTQzcHg7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDMyMXB4O1xuICAgICAgICAgICAgICAgICZfYWN0aXZle1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX2FjdGl2ZXtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmLWV4aXR7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDE1cHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19tZWdhe1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC01MHB4O1xuICAgICAgICAgICAgICAgICAgICByaWdodDogMzhweDsgXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiA3O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDY7XG4gICAgICAgICAgICBwYWRkaW5nOiA0MHB4IDE1cHg7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTEwJSk7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuNXMgdHJhbnNmb3JtIGVhc2UtaW4tb3V0O1xuICAgICAgICB9XG4gICAgICAgICZfYWN0aXZle1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE1cHgpO1xuICAgICAgICB9XG4gICAgICAgIGF7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBjb2xvcjogIzNmM2YzZjtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcyBjb2xvciBlYXNlLWluO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgaW1ne1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAaW5jbHVkZSBtZWRpYSgzNzVweCl7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5MjkyOTI7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgICAgICY6OmFmdGVye1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgLmFycm93LXVwe1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiA2cHg7XG4gICAgICAgICAgICByaWdodDogMjE2cHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuMnMgYWxsO1xuICAgICAgICAgICAgJl9yb3RhdGV7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmX19sb2dve1xuICAgICAgICB3aWR0aDogOThweDtcbiAgICAgICAgaGVpZ2h0OiA5MXB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIzcHg7XG4gICAgICAgIGltZ3tcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX3JpZ2h0e1xuICAgICAgICAmLWljb25ze1xuICAgICAgICAgICAgaXtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICZfX21lZ2F7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDIzMHB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgJl9hY3RpdmV7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhKDM3NXB4KXtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiA2O1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtd3JhcHBlcntcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtaXRlbXtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhKDM3NXB4KXtcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19leGl0e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAzNnB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogOTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19kZXNjcntcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjVzIHRyYW5zZm9ybTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC00MnB4O1xuICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExMCUpO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiA4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAmX2FjdGl2ZXtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJl9fd3JhcHBlcntcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLWFycm93e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICZfX3RpdGxle1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogJGZvbnRfc2l6ZTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhKDM3NXB4KXtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJl9faW1ne1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyNDBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEyM3B4O1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgaW1ne1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19saW5rc3tcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAgICAgYXtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvcl9saW5rO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6ICRmb250X3NpemU7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjJzIGFsbDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5oZWFkZXJfX2hhbWJ1cmdlcntcbiAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwcHg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEgKDM3NXB4KXtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cbiAgICAgICAgLmhhbWJ1cmdlcl9faXRlbXtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDNweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDNweDtcbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDEpe1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfSAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMil7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDMpe1xuICAgICAgICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG4gICAgJl9fYWJvdXQtbWVnYXtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgbWluLWhlaWdodDogMTUwcHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgei1pbmRleDogNTtcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICBwYWRkaW5nOiAyMHB4IDA7XG4gICAgICAgICZfYWN0aXZle1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgJl9fd3JhcHBlcntcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgfVxuICAgICAgICAmX19sZWZ0e1xuICAgICAgICAgICAgJi1pdGVte1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLXdyYXBwZXJ7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYtdGl0bGV7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLWxpc3R7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGF7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvcl9saW5rO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuNXMgYWxsO1xuICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX3JpZ2h0e1xuICAgICAgICAgICAgJi1pbWd7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDI4N3B4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTIzcHg7XG4gICAgICAgICAgICAgICAgaW1ne1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtvYmplY3QtZml0OiBjb250YWluO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAuYWJvdXQtaW1ne1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgXG4gICAgLy8gYXJ0aWNsZSBtZW51XG4gICAgJl9fYXJ0aWNsZXtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgei1pbmRleDogNTtcbiAgICAgICAgYm90dG9tOiBhdXRvO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICAgICAgJl9hY3RpdmV7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgICAgICAmLXdyYXBwZXJ7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICAgIH1cbiAgICAgICAgJi1pdGVte1xuICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xuICAgICAgICAgICAgJl9fd3JhcHBlcntcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGltZ1xuICAgICAgICAgICAgJl9faW1ne1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyNDBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEyM3B4O1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgaW1ne1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB0aXRsZVxuICAgICAgICAgICAgJl9fdGl0bGV7XG4gICAgICAgICAgICAgICAgYXtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3MgYWxsO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlcntcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL3RhZ3NcbiAgICAgICAgICAgICZfX3RhZ3N7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICAgIGRpdntcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkY29sb3JfbGluaztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bG93ZXJjYXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4iLCIkYmxhY2s6ICMwMDA7XG4kd2hpdGU6ICNmZmY7XG4kY29sb3JfbGluazogI2EzYTNhMztcbiRmb250X3NpemU6IDE0cHg7XG4kYm9yZGVyX2NvbG9yOiAjNUY1RTVFO1xuJGxpbmtfc2l6ZTogMTBweDsiLCIuZ29vZHN7XG4gICAgJl9fd3JhcHBlcntcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZTogbWlubWF4KDUwMHB4LDFmcikgLyAxZnIgMWZyO1xuICAgICAgICBAaW5jbHVkZSBtZWRpYSgzNzVweCl7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlOiA1MDBweCAxZnIgLyAxZnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9fZGVzY3J7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAgICAgJi13cmFwcGVye1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBkaXZ7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gbWVkaWFcbiAgICAmX19tZWRpYXtcbiAgICAgICBcbiAgICB9XG4gICAgLy8gdGl0bGVcbiAgICAmX190aXRsZXtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgZm9udC1zaXplOiA1MHB4O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgfVxuICAgIC8vIHR5cGVcbiAgICAmX190aXRsZS10eXBle1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgfVxuICAgICZfX3R5cGV7XG4gICAgICAgIHNwYW57XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIHByaWNlXG4gICAgJl9fcHJpY2UtY29tcGFyZXtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAuZ29vZHNfX3ByaWNle1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmdvb2RzX19jb21wYXJle1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICBjb2xvcjogJGNvbG9yX2xpbms7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gZGVzY3JcbiAgICAmX19kZXNjci1pdGVte1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIH1cbiAgICAvLyB3ZWlnaHRcbiAgICAmX193ZWlnaHR7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICB9XG4gICAgLy8gdGFnc1xuICAgICZfX3RhZ3N7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICAgICZfX3RhZ3tcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG4gICAgICAgIGNvbG9yOiAkY29sb3JfbGluaztcbiAgICB9XG5cbn1cblxuLnN3aXBlci1jb250e1xuICAgIGhlaWdodDogNTAwcHg7XG4gICAgd2lkdGg6IDYwMHB4O1xuICAgIEBpbmNsdWRlIG1lZGlhKDM3NXB4KXtcbiAgICAgICAgd2lkdGg6IDM1MHB4O1xuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYSgzMjBweCl7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICB9XG4gICAgLnN3aXBlcl9faW1ne1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgaW1ne1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgLy8gb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgICAgfVxuICAgICAgICBpbWcraW1ne1xuICAgICAgICAgICAgd2lkdGg6IDEwMjRweCFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMjRweCFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBAaW5jbHVkZSBtZWRpYSgzNzVweCl7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDY4MHB4IWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMDBweCFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnN3aXBlci1idXR0b24tbmV4dCxcbiAgICAuc3dpcGVyLWJ1dHRvbi1wcmV2e1xuICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgIH1cbiAgICAuc3dpcGVyLWJ1dHRvbi1uZXh0e1xuICAgICAgICByaWdodDogMDtcbiAgICB9XG4gICAgLnN3aXBlci1idXR0b24tcHJldntcbiAgICAgICAgbGVmdDogMDtcbiAgICB9XG59XG5cbi5jdXN0b21TcXVhcmV7XG4gICAgYm9yZGVyOiBub25lIWltcG9ydGFudDtcbn1cblxuLnpvb21JbWd7XG4gICAgQGluY2x1ZGUgbWVkaWEoMzc1cHgpe1xuICAgICAgICB3aWR0aDogODAwcHghaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IDgwMHB4IWltcG9ydGFudDtcbiAgICB9XG4gIFxufSJdfQ== */
